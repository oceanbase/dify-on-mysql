"""update mcp servers and tools

Revision ID: 37c2bb41f84a
Revises: e0e5dc8aa037
Create Date: 2025-08-06 17:49:50.810109

"""
from alembic import op
import models
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '37c2bb41f84a'
down_revision = 'e0e5dc8aa037'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_mcp_servers',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('server_code', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('parameters', mysql.LONGTEXT(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='app_mcp_server_pkey'),
    sa.UniqueConstraint('server_code', name='unique_app_mcp_server_server_code'),
    sa.UniqueConstraint('tenant_id', 'app_id', name='unique_app_mcp_server_tenant_app_id')
    )
    op.create_table('tool_mcp_providers',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('server_identifier', sa.String(length=24), nullable=False),
    sa.Column('server_url', mysql.LONGTEXT(), nullable=False),
    sa.Column('server_url_hash', sa.String(length=64), nullable=False),
    sa.Column('icon', sa.String(length=255), nullable=True),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('user_id', models.types.StringUUID(), nullable=False),
    sa.Column('encrypted_credentials', mysql.LONGTEXT(), nullable=True),
    sa.Column('authed', sa.Boolean(), nullable=False),
    sa.Column('tools', mysql.LONGTEXT(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='tool_mcp_provider_pkey'),
    sa.UniqueConstraint('tenant_id', 'name', name='unique_mcp_provider_name'),
    sa.UniqueConstraint('tenant_id', 'server_identifier', name='unique_mcp_provider_server_identifier'),
    sa.UniqueConstraint('tenant_id', 'server_url_hash', name='unique_mcp_provider_server_url')
    )
    op.create_table('workflow_draft_variables',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('last_edited_at', sa.DateTime(), nullable=True),
    sa.Column('node_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('selector', sa.String(length=255), nullable=False),
    # referring /obdata/data/dev/dify-on-mysql/api/migrations/versions/2025_05_15_1531-2adcbe1f5dfb_add_workflowdraftvariable_model.py
    sa.Column("value_type", sa.String(length=20), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('visible', sa.Boolean(), nullable=False),
    sa.Column('editable', sa.Boolean(), nullable=False),
    sa.Column('node_execution_id', models.types.StringUUID(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('workflow_draft_variables_pkey')),
    sa.UniqueConstraint('app_id', 'node_id', 'name', name=op.f('workflow_draft_variables_app_id_key'))
    )
    with op.batch_alter_table('workflow_node_executions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('workflow_node_executions_tenant_id_idx'), ['tenant_id', 'workflow_id', 'node_id', sa.literal_column('created_at DESC')], unique=False)

    with op.batch_alter_table('workflow_runs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('workflow_run_tenant_app_sequence_idx'))
        batch_op.drop_column('sequence_number')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('workflow_runs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('sequence_number', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_index(batch_op.f('workflow_run_tenant_app_sequence_idx'), ['tenant_id', 'app_id', 'sequence_number'], unique=False)

    with op.batch_alter_table('workflow_node_executions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('workflow_node_executions_tenant_id_idx'))

    op.drop_table('workflow_draft_variables')
    op.drop_table('tool_mcp_providers')
    op.drop_table('app_mcp_servers')
    # ### end Alembic commands ###
